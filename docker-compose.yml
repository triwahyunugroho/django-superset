services:
  # PostgreSQL Database (shared by Django and Superset)
  postgres:
    image: postgres:15-alpine
    container_name: superset-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-superset}
      POSTGRES_USER: ${POSTGRES_USER:-superset}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-superset}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - superset-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-superset}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for Superset caching and Celery)
  redis:
    image: redis:7-alpine
    container_name: superset-redis
    ports:
      - "6379:6379"
    networks:
      - superset-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Apache Superset
  superset:
    build:
      context: ./superset_dockerfile
      dockerfile: Dockerfile
    container_name: superset
    environment:
      - SUPERSET_SECRET_KEY=${SUPERSET_SECRET_KEY:-your_secret_key_here}
      - SUPERSET_DATABASE_URI=postgresql+psycopg2://${POSTGRES_USER:-superset}:${POSTGRES_PASSWORD:-superset}@postgres:5432/${POSTGRES_DB:-superset}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # Admin user configuration
      - SUPERSET_ADMIN_USER=${SUPERSET_ADMIN_USER:-admin}
      - SUPERSET_ADMIN_FIRSTNAME=${SUPERSET_ADMIN_FIRSTNAME:-Admin}
      - SUPERSET_ADMIN_LASTNAME=${SUPERSET_ADMIN_LASTNAME:-User}
      - SUPERSET_ADMIN_EMAIL=${SUPERSET_ADMIN_EMAIL:-admin@example.com}
      - SUPERSET_ADMIN_PASSWORD=${SUPERSET_ADMIN_PASSWORD:-admin}
    ports:
      - "8088:8088"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./superset_config/superset_config.py:/app/pythonpath/superset_config.py
      - superset_home:/app/superset_home
    networks:
      - superset-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django Application
  django:
    build:
      context: ./django_app
      dockerfile: Dockerfile
    container_name: django-app
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${DJANGO_SECRET_KEY:-django-secret-key-change-this}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-superset}:${POSTGRES_PASSWORD:-superset}@postgres:5432/django_db
      - SUPERSET_URL=http://superset:8088
      - SUPERSET_SERVICE_USER=${SUPERSET_SERVICE_USER:-django_service}
      - SUPERSET_SERVICE_PASSWORD=${SUPERSET_SERVICE_PASSWORD:-django_service_password}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,django,caddy}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      superset:
        condition: service_healthy
    volumes:
      - ./django_app:/app
    networks:
      - superset-network
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py runserver 0.0.0.0:8000
      "

  # Caddy Web Server (Reverse Proxy)
  caddy:
    image: caddy:2-alpine
    container_name: caddy-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - superset-network
    depends_on:
      - django
      - superset

networks:
  superset-network:
    driver: bridge

volumes:
  postgres_data:
  superset_home:
  caddy_data:
  caddy_config:
